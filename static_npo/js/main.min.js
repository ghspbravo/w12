"use strict";


function popup (popup) {
  $(popup).appendTo('.fade');
  $('.fade').addClass('active');
  $('body').css('overflow','hidden')
}

function scroll_to () {
    $(".menu a").click(function (e){
        if($(window).width()<=768 && $('.menu').hasClass('active')) {
            $('.burger').trigger('click');
            $('html, body').animate({
                scrollTop: $(''+$(this).attr('href')).offset().top - 49
            }, 500);
        } else {
            $('html, body').animate({
                scrollTop: $(''+$(this).attr('href')).offset().top
            }, 1000);
        }
        e.preventDefault()
    });
}

function popupClose(){
    $('.popup-close').on('click', function (e) {
        $(this).closest('.fade').removeClass('active');
        $(this).closest('.popup').appendTo('body');
        $('body').css('overflow','');
        e.preventDefault()
    })
}

function placeholder () {
    $('.input__placeholder').each(function () {
        let _this = $(this);
        let input = _this.find('.input');
        input.on('focus', function () {
            _this.addClass('active')
        }).on('blur', function () {
            if(input.val() == '') {
                _this.removeClass('active')
            }
        })
    })
}

function menuMobile() {
    let burger = $('.burger'),
        menu = $('.menu');
    burger.on('click', function () {
        $(this).toggleClass('active');
        menu.toggleClass('active');
        if(burger.hasClass('active')) {
            $('body').css('overflow','hidden')
        } else {
            $('body').css('overflow','')
        }
    })
}

$(document).ready(function(){
    jQuery('img.svg').each(function(){
        var $img = jQuery(this);
        var imgID = $img.attr('id');
        var imgClass = $img.attr('class');
        var imgURL = $img.attr('src');

        jQuery.get(imgURL, function(data) {
            // Get the SVG tag, ignore the rest
            var $svg = jQuery(data).find('svg');

            // Add replaced image's ID to the new SVG
            if(typeof imgID !== 'undefined') {
                $svg = $svg.attr('id', imgID);
            }
            // Add replaced image's classes to the new SVG
            if(typeof imgClass !== 'undefined') {
                $svg = $svg.attr('class', imgClass+' replaced-svg');
            }

            // Remove any invalid XML tags as per http://validator.w3.org
            $svg = $svg.removeAttr('xmlns:a');

            // Check if the viewport is set, if the viewport is not set the SVG wont't scale.
            if(!$svg.attr('viewBox') && $svg.attr('height') && $svg.attr('width')) {
                $svg.attr('viewBox', '0 0 ' + $svg.attr('height') + ' ' + $svg.attr('width'))
            }

            // Replace image with new SVG
            $img.replaceWith($svg);

        }, 'xml');

    });

    var _initialCountry = 'us';
    var countryData = window.intlTelInputGlobals.getCountryData()
    for (var i = 0; i < countryData.length; i++) {
      var country = countryData[i];
      if (country.iso2 == $('#phone').attr('data-def')) {
        _initialCountry = country.iso2;
        break;
      }
    }
    let input = document.querySelectorAll(".input_phone");
    input.forEach(phone => {
        window.intlTelInput_1 = intlTelInput(phone,{
            initialCountry: _initialCountry,
            separateDialCode: true,
            autoPlaceholder: false,
            preferredCountries:[],
            autoHideDialCode: false
        });
        $(intlTelInput_1.telInput).on('focus',function () {
            $(this).closest('.intl-tel-input').addClass('focus')
        }).on('blur', function () {
            $(this).closest('.intl-tel-input').removeClass('focus')
        });
    })

    scroll_to();
    popupClose();
    placeholder();
    menuMobile();
});

function _ajaxJson(p) {
  var e = 'Server failure';
  $.ajax({
    url: p.url,
    data: p.data || null,
    type: p.type || 'post',
    dataType: 'json',
    success: function(json) {
      if (json && json.error !== undefined) {
        if (json.error != '') {
          e = json.error;
        } else {
          p.success(json);
          return true;
        }
      }
      if (p.error) {
        p.error(e);
      }
    },
    error: function() {
      if (p.error) {
        p.error(e);
      }
    }
  });
}